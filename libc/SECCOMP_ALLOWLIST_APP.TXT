# This file is used to populate seccomp's allowlist policy in combination with SYSCALLS.TXT.
# Note that the resultant policy is applied only to zygote spawned processes.
#
# This file is processed by a python script named genseccomp.py.

# Needed for debugging 32-bit Chrome
pipe(int pipefd[2])	lp32

# b/34651972
access(const char *pathname, int mode)	lp32
stat64(const char*, struct stat64*)	lp32

# b/34813887
open(const char *path, int oflag, ... ) lp32,x86_64
getdents(unsigned int fd, struct linux_dirent *dirp, unsigned int count) lp32,x86_64

# b/34719286
eventfd(unsigned int initval, int flags)	lp32

# b/34817266
epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout)	lp32

# b/34908783
epoll_create(int size)	lp32

# b/34979910
creat(const char *pathname, mode_t mode)	lp32
unlink(const char *pathname)	lp32

# b/35059702
lstat64(const char*, struct stat64*)	lp32

# b/35217603
fcntl(int fd, int cmd, ... /* arg */ )	lp32
fork()	lp32
poll(struct pollfd *fds, nfds_t nfds, int timeout)	lp32

# b/35906875
inotify_init()	lp32
getuid()	lp32

# b/36435222
remap_file_pages(void *addr, size_t size, int prot, size_t pgoff, int flags)	lp32

# b/36449658
rename(const char *oldpath, const char *newpath)	lp32

# b/36726183. Note arm does not support mmap
mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset)	x86

# b/37769298
dup2(int oldfd, int newfd)	lp32

# b/62779795
compat_select:_newselect(int n, unsigned long* inp, unsigned long* outp, unsigned long* exp, struct timeval* timeout) lp32

# b/62090571
mkdir(const char *pathname, mode_t mode)	lp32

# Not used by bionic in U because riscv64 doesn't have it, but still
# used by legacy apps (http://b/254179267).
renameat(int, const char*, int, const char*)  arm,x86,arm64,x86_64
